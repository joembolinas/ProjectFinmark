{
  "name": "finmark-network-security-platform",
  "version": "3.0.0",
  "description": "FinMark Corporation Network Security Transformation Platform - Production-Ready Enterprise Solution with comprehensive security, performance optimization, and scalability enhancements",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "test": "npm run test:network && npm run test:load && npm run test:security",
    "test:network": "node tests/network-test.js",
    "test:load": "node tests/load-test.js",
    "test:security": "node tests/network-validation.js",
    "setup": "node setup/install-dependencies.js",
    "monitor": "node monitoring/network-monitor.js",
    "traffic-gen": "node tools/traffic-generator.js",
    "vpn-setup": "node config/vpn-setup.js",
    "firewall-config": "node config/firewall-config.js",
    "topology": "node tools/network-topology-generator.js",
    "packet-capture": "node tools/packet-capture-simulator.js",
    "simulate-finmark": "node tools/packet-capture-simulator.js && node tools/traffic-generator.js",
    "generate-reports": "npm run packet-capture && npm run topology",
    "load-balancer": "node tools/load-balancer.js",
    "idps-monitor": "node tools/idps-monitor.js",
    "rate-limiter": "node tools/rate-limiter.js",
    "security-framework": "node tools/week8-security-framework.js",
    "prototype-refinement": "node tools/week9-prototype-refinement.js",
    "deploy-tc": "bash config/finmark-traffic-control.sh",
    "week8-challenge": "npm run load-balancer && npm run idps-monitor && npm run rate-limiter && npm run security-framework",
    "week9-refinement": "npm run prototype-refinement",
    "production-deploy": "npm run deploy-tc && echo 'Import config/finmark-pfsense-config.xml to pfSense'"
  },
  "project_status": {
    "current_week": "Week 9 Completed",
    "phase": "Integration and Presentation Preparation",
    "progress": "75% Complete (9 of 12 weeks)",
    "milestone": "Milestone 2 Draft 2 Ready for Submission",
    "next_deliverable": "Week 10 Final Presentation"
  },
  "capabilities": {
    "network_simulation": "Enterprise-grade with 20 devices, 5 VLANs",
    "security_systems": "Multi-layer defense with IDPS, firewall, VPN",
    "load_balancing": "4 algorithms with health monitoring",
    "traffic_shaping": "Production tc script with QoS",
    "performance_optimization": "Auto-scaling, caching, circuit breakers",
    "production_configs": "pfSense XML and Linux tc script ready"
  },
  "achievements": {
    "week8_challenge": "300% traffic spike successfully managed",
    "week9_refinement": "48 total improvements implemented",
    "security_effectiveness": "25.3% → 35% target improvement",
    "system_resilience": "88.54% → 92% target improvement",
    "production_readiness": "Enterprise-grade configurations generated"
  },
  "dependencies": {
    "express": "^4.18.2",
    "http-proxy-middleware": "^2.0.6",
    "node-ssh": "^13.1.0",
    "axios": "^1.5.0",
    "ws": "^8.14.2",
    "commander": "^11.1.0",
    "chalk": "^4.1.2",
    "inquirer": "^8.2.6",
    "fs-extra": "^11.1.1",
    "yaml": "^2.3.4"
  },
  "devDependencies": {
    "nodemon": "^3.0.1",
    "jest": "^29.7.0",
    "artillery": "^2.0.1"
  },
  "keywords": ["network", "security", "finmark", "cybersecurity", "enterprise", "production", "traffic-shaping", "load-balancing", "idps", "vpn", "firewall", "qos", "auto-scaling"],
  "author": "FinMark Network Security Team - MO-IT151 Platform Technologies",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/joembolinas/ProjectFinmark"
  }
}